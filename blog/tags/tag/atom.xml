<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: tag | Tzeng Yuxio]]></title>
  <link href="http://tzengyuxio.me/blog/tags/tag/atom.xml" rel="self"/>
  <link href="http://tzengyuxio.me/"/>
  <updated>2012-12-14T19:23:06+08:00</updated>
  <id>http://tzengyuxio.me/</id>
  <author>
    <name><![CDATA[Tzeng Yuxio]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的貼標籤規範]]></title>
    <link href="http://tzengyuxio.me/blog/2012/04/21/my-tagging-guideline/"/>
    <updated>2012-04-21T06:33:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2012/04/21/my-tagging-guideline</id>
    <content type="html"><![CDATA[<p>前幾天討論了<a href="http://tzengyuxio.me/blog/2012/04/18/inconsistency-of-tagging-formats/">目前各家網站標籤功能的混亂</a>，即便有這些混亂，「標籤」仍是訊息管理非常重要的一個工具，也是落實真正<a href="http://zh.wikipedia.org/wiki/%E8%AF%AD%E4%B9%89Web">語義網</a>（semantic web）的一個基礎。</p>

<p><img src="/images/2012/2012-04-21-too-many-tags.png" alt="too many tags!" /></p>

<!-- more -->


<p>然而正由於目前沒有一致性的標籤標準，人們對於標籤的使用也很隨興，所以會常常看到下面三種情形：</p>

<ol>
<li><p>同一個概念以不同的詞語組合方式標籤</p>

<p> 例如一篇文章中同時加入了 <code>win7</code>, <code>Windows 7</code>, <code>MS windows 7</code>, <code>windows-7</code> 等標籤，有縮寫、有全名、有各種不同的連接詞。這種現象在以搜尋流量為主的媒體網站中尤為常見。上面的圖就是一個活生生血淋淋（？）的例子，這組關鍵字取自 Engadget 的<a href="http://chinese.engadget.com/2012/04/20/sony-patent-application-aims-to-put-names-to-faceless-mmo-player/">這篇文章</a>。</p></li>
<li><p>同一個概念以不同的單字形式標籤</p>

<p> 以英文做標籤的網站中很容易發生這種情形，因為一個概念在不同的詞性表現下就是不同的單字，因而成為不同的標籤關鍵字。例如我想要加上「部落格」這個標籤，用英文寫時就可能同時把名詞、動詞、動名詞，還有單數型複數型全部通通填上去，像這樣： <code>blog</code>, <code>blogging</code>, <code>blogs</code>。</p></li>
<li><p>同一個概念以不同的語言標籤</p>

<p> 這個就是多語言使用者的苦惱了。例如像我這樣的宅宅就會因為以下 <code>動畫</code>, <code>アニメ</code>, <code>Anime</code>, <code>動画</code> 等標籤到底要用哪個好而苦惱，而最後的結果通常就是全部都用。</p></li>
</ol>


<p>這三種情形都是用不同的方式去標籤同一個概念，雖然初衷是為了將來方便搜尋，但往往反而導致搜尋時的困難。考慮以下情形：假設我的一篇部落格文章用了 <code>win7</code> 與 <code>Window 7</code> 作為標籤，另一篇主題近似的文章卻是用了 <code>Windows 7</code> 與 <code>win-7</code> 作為標籤。這種不一致性會讓讀者在前篇文章中點下 <code>win7</code> 這個標籤連結時，無法將所有主題相關的文章列出。</p>

<p>另外一個問題則是製造不必要的心力浪費。因為沒有一個標準來選擇用哪個單詞做標籤，因此也不知道自己將來要回頭找資料時，會用哪個單詞來做搜尋，只好想辦法把所有自己想得到的所有相關字一股腦兒全部填入。</p>

<p>為了避免上述問題，雖然目前每個網站的標籤機制如同多頭馬車各行其道，制定一個自己個人使用的標籤習慣（或規範）倒是可行的一個作法。這個問題相信困擾的不只是我，上網找了一下，有兩篇值得參考的文章，第一個是 Calvin C. Yu 所寫的 <a href="http://www.slideshare.net/calvinyu/hitech-hi-tag">Taggin Guidelines</a> （在投影片中的第 13 頁），主要原則如下：</p>

<blockquote><ul>
<li>簡練</li>
<li>小寫</li>
<li>單數</li>
</ul>
</blockquote>

<p>另一個參考是由 Hutch Carpenter 所提出的，他認為標籤機制應該有個標準，而這個標準就是<strong><a href="http://bhc3.com/2008/08/22/why-isnt-this-the-tag-standard-multi-word-comma-separated/">複數詞組，逗號分隔</a></strong> (Multi Word, Comma Seperated)。</p>

<hr />

<p>以上便是我個人使用標籤的一些而我自己所使用標籤的標準如下：</p>

<ol>
<li><p><strong>簡便性</strong></p>

<ol>
<li><p><strong>盡量簡單。</strong></p></li>
<li><p><strong>方便輸入。</strong>所以標籤時會以英文為主，例如用 <code>browser</code> 而不用 <code>瀏覽器</code>。</p></li>
<li><p><strong>自己容易想起。</strong>通常第一個想到的字詞就是了。</p></li>
<li><p><strong>使用容易理解的詞。</strong></p></li>
</ol>
</li>
<li><p><strong>一致性</strong></p>

<ol>
<li><p><strong>一個概念一個詞。</strong>所以 <code>動畫</code>, <code>アニメ</code>, <code>Anime</code>, <code>動画</code> 就只剩下用一個 <code>anime</code>。</p></li>
<li><p><strong>小寫。</strong>同樣是為了方便輸入。</p></li>
<li><p><strong>用單數，用名詞。</strong>當然，這免不了會遇到例外情況，主要還是要依照使用情境判斷。</p></li>
<li><p><strong>人名的標記盡可能從主人。</strong>例如使用 <code>菅野よう子</code> 而非 <code>菅野洋子</code>, <code>韩寒</code> 而非 <code>韓寒</code>。除非該人名的原始拼寫方式我不熟悉，例如我總是想不起來戈巴契夫怎麼拼，那就直接用<code>戈巴契夫</code>吧。同樣是以<strong>自己方便</strong>為最高原則。</p></li>
<li><p><strong>除非是自己口語常用的縮寫，不然不使用縮寫作標記。</strong><code>nds</code> <code>win7</code> <code>xbox360</code> 都很好理解，可是用 <code>resp</code> <code>req</code> 來做為 <code>response</code> <code>request</code> 標籤的替代，就太過頭了。現在連寫程式都不鼓勵這種縮寫了。</p></li>
</ol>
</li>
<li><p><strong>格式</strong></p>

<ol>
<li><p><strong>省略單字間空白。</strong>也就是說用 <code>macosx</code> 而非 <code>mac os x</code>。不過英文人名是例外；日常用字如 <code>smartphone</code> 我們容易斷字，相對的人名如果省略空白有時候就不容易逆推。其他如果空白省略會造成歧異的話，也應該保留空白於關鍵字中。</p></li>
<li><p><strong>以逗號區隔關鍵字。</strong>正確來說應該是以「逗號加空白」區隔關鍵字。</p></li>
</ol>
</li>
</ol>


<hr />

<p>以上便是我個人使用的標籤規則。如果你有不錯的標籤習慣，也歡迎一起討論分享。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 調教筆記]]></title>
    <link href="http://tzengyuxio.me/blog/2012/04/20/refinements-of-my-octopress/"/>
    <updated>2012-04-20T08:52:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2012/04/20/refinements-of-my-octopress</id>
    <content type="html"><![CDATA[<p>花了一個晚上沒睡覺，調整了一下這個 Octopress 的一些功能與設定。現在還懶得記詳細步驟，就先簡單寫個筆記吧，以防將來自己看 Source Repository 也看不出到底為什麼要這麼改。</p>

<!-- more -->


<h3>一、加入 LinkWithin 功能</h3>

<p>原本以為 Octopress 沒辦法加，不過實際嘗試後發現並不難。要修改的地方主要有 <code>source/_layouts/default.html</code> 和 <code>source/_layouts/post.html</code> 這兩個檔案。</p>

<h3>二、文章下方分享功能的版面調整</h3>

<p>Octopress 內建的 twitter, google plus, facebook 三項文章分享功能如果全部打開，會佔掉約 680px 左右的畫面寬度。當文章區塊的寬度小於這個數值時，facebook 的按鈕會跳到下一行。這邊可以透過修改 <code>source/_includes/post/sharing.html</code> 的方式來稍微縮減 facebook 區塊的寬度，以符合需求。</p>

<p>同區塊另外一個問題則是在預設版面中， twitter, google plus, facebook 三者按鈕的高度不同，尤其 facebook 的位置比較偏下。這邊我參考 <a href="https://stacksocial.com/">StackSocial</a> 頁面最下方區塊的作法，將三個按鈕改成 <code>ul → li</code> 格式。</p>

<h3>三、加入標籤 (tag) 功能</h3>

<p>這是花最多時間與腦力的一部分，尤其是我沒有 Ruby 基礎，好在 Ruby 的程式碼不難看懂，我雖然寫不出來，但是我看現有的 code 依樣畫葫蘆，一樣生出功能。這邊主要參考了 Octopress 內建的 Category Plugin，稍作修改，便得到了標籤功能。</p>

<p>透過這次修改，同時也對 <a href="https://github.com/mojombo/jekyll">Jekyll</a> 所使用的 <a href="http://wiki.github.com/shopify/liquid/liquid-for-designers">Liquid Template System</a> 有更深入的了解。想想要整一個 Octopress 網站也真折騰，除了要懂 HTML, CSS, JavaScript 這些基本的之外，還得會摸 Ruby, Sass, Liquid Template，滿滿都是術語與新東西，真不是件簡單任務。</p>

<p>話說既然加入了標籤功能，接下來就是找個時間好好整理每篇文章的「分類」和「標籤」了……嗯，這讓我想到一句老話：</p>

<blockquote><p>要改的東西太多，那就改天吧。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[形形色色的標籤機制]]></title>
    <link href="http://tzengyuxio.me/blog/2012/04/18/inconsistency-of-tagging-formats/"/>
    <updated>2012-04-18T09:53:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2012/04/18/inconsistency-of-tagging-formats</id>
    <content type="html"><![CDATA[<p><img src="/images/2012/2012-04-18-inconsistency-of-tags.jpg" alt="inconsistency of tags" /></p>

<p>「標籤」功能，在今天的網站應用中，已經是極為普遍的一種機制，甚至在許多桌面的應用上也可以見到「標籤」的蹤跡。在不同的地方，標籤可能有不同的名字，例如：</p>

<!-- more -->


<ul>
<li><code>tag</code>: Picasa, Flickr, YouTube, amazon, WordPress, 豆瓣</li>
<li><code>label</code>: Gmail, Blogger</li>
<li><code>keyword</code>: iPhoto, Aperture</li>
<li><code>hashtag</code>: Twitter, Google+</li>
<li><code>category</code>: Anobii, WordPress</li>
</ul>


<p>考慮到中文翻譯的話，又更加混亂：</p>

<ul>
<li><strong>標籤</strong>：Flickr, Gmail, Blogger, 豆瓣, WordPress</li>
<li><strong>標記</strong>：Picasa, YouTube</li>
<li><strong>關鍵字</strong>：iPhoto</li>
<li><strong>分類</strong>：Anobii, WordPress</li>
</ul>


<p>針對以上的清單進行耙梳，我們可以得到下面幾個觀察：</p>

<ol>
<li><p>這些類似的功能中，最常見的英文名字是 "tag"，中文名字是「標籤／标签」。</p></li>
<li><p>然而在 Google 的產品中，"tag" 通常翻作「標記」；「標籤」這詞則是用在 "label" 上（儘管他們兩者功能接近）。</p></li>
<li><p>hashtag 有其自有的形式：<code>#somewordswithoutspace</code>, 不過其使用的方式與目的和單純的標籤（tag）並無太大差別。</p></li>
<li><p>有些應用服務存在著 category 與 tag 兩種機制，一個物件（例如部落格文章）可能只隸屬於單一分類（category）但可擁有多個標籤（tag）。但是現在越來越多的應用服務都可以讓使用者將單一物件同時歸屬於多個分類之下，使得分類與標籤的界線漸趨模糊。</p></li>
<li><p>可以從另外一個角度來釐清分類與標籤的不同：分類屬於事先規劃好的清單，標籤則是依照物件內容隨意添加的清單。</p></li>
<li><p>不過在只有「分類」沒有「標籤」機制的網站中（如 Anobii），「分類」的使用方式其實跟「標籤」是沒有兩樣的。</p></li>
<li><p>反之，只有標籤機制的網站，如 Blogger, 某種程度上也可以透過標籤來模擬分類的機制（可以參考<a href="http://reader.aqualuna.me/">此網站</a>的右側選單）。</p></li>
</ol>


<p>蠻混亂的，不是嗎？為了方便起見，我這邊用「<strong>分類 (category)</strong>」、「<strong>標籤 (tag)</strong>」與「<strong>Hashtag</strong>」來稱呼上面一大堆名字所代表的功能，其中「標籤 (tag)」同時也代表了 <em>label</em> 與 <em>keyword</em>。</p>

<p>分類、標籤與 Hashtag 三者的功能接近又互相重疊，命名也是各家網站各自為政，沒有個準。不過混亂還沒結束，讓我們針對「標籤」的部份，繼續深入研究下去。</p>

<h3>標籤格式</h3>

<p>標籤的格式牽扯的問題既廣且深，它不僅決定了使用者在輸入欄位中填入標籤的方法，也涉及到了資料儲存在資料庫中的方式。標籤的格式有以下幾個考量層面：</p>

<ol>
<li><p>間隔方式</p>

<p> 常見的間隔方式分兩種：<strong>空白</strong>與<strong>逗號</strong>。Flickr 採用空白間隔，Blogger 與 YouTube 則是逗號間隔。這邊還看不出什麼大問題，請接著看下去。</p></li>
<li><p>允許空白與否</p>

<p> 基本上，大多數的標籤功能都允許標籤內含空白，我們免不了會遇到例如 <code>"White House"</code> 或 <code>"Windows Vista"</code> 這樣的標籤。這時候不同的間隔方式就會帶來不同的考量了。</p>

<ol>
<li><p><strong>以空白間隔的標籤</strong>，為了要允許空白字元作為標籤的一部分，所以必須引入引號，被引號包住的詞算做一個標籤，這是 Flickr 的作法。所以一張有「<code>white</code> <code>house</code>」標籤的照片，也許是張白色的房子；而一張有「<code>"white house"</code>」標籤的照片，則可能是美國白宮。不過這樣會使得引號無法作為標籤的一部分，比方說「<code>5'7"</code>」（五呎七吋）這樣的詞就不能拿來當標籤了。</p></li>
<li><p><strong>以逗號間隔的標籤</strong>，在含有空白間隔的標籤問題上看起來比較單純。但實作上其實有一點要注意，就是真正的間隔符號並非單單只有逗號，而是<strong>逗號加上一個空白</strong>。因為人們在輸入時習慣在逗號後面加入空白，如果說空白是合法標籤字元的話，那麼為什麼只有單字間的空白才被記入，單字前後的空白都被忽略呢？</p></li>
</ol>
</li>
<li><p>大小寫</p>

<p> 這邊再以 Flickr 與 YouTube 為例子作比較。YouTube 對於標籤的大小寫是照單全收，所以 <code>"TREE"</code> 標籤點下去的搜尋就是 "TREE"，而反之全小寫標籤的搜尋文字就是小寫的，反正搜尋結果無視大小寫，所以不成問題。</p>

<p> Flickr 的作法稍微複雜些，除了你所輸入的之外，Flickr 還會另外將標籤簡化，然後儲存。你可以在三張照片分別使用 <code>"TREE"</code> 與 <code>"Tree"</code> 與 <code>"tree"</code>  這三種大小不同的標籤名，顯示時也是顯示各自不同的大小寫，然而他們都是代表著同樣的一個標籤。所以，如果你在一張照片中使用了 <code>"TREE"</code> 的標籤後，接著再輸入 <code>"tree"</code> 標籤，會發現沒有任何反應，因為標籤重複了。</p></li>
<li><p>內部處理</p>

<p> Flickr 在輸入標籤時所做的處理，除了大小寫外，也套用在空白上。因此，<code>"White House"</code>, <code>"whitehouse"</code>, <code>"WhiteHouse"</code> 這三個標籤同樣都是指向 <code>"whitehouse"</code> 這個內部處理的標籤。Flickr 內部運作時的標籤，是會把空白去掉並且全部轉為小寫字母。</p>

<p> Youtube 就不同了，如前所述，你輸入什麼標籤它就存什麼，所以 <code>"White House"</code> 跟 <code>"whitehouse"</code> 是不同的。事實上，你用這兩組字串去 YouTube 搜尋，也會得到不一樣的結果。</p></li>
</ol>


<hr />

<p>延伸閱讀：<a href="http://37signals.com/svn/archives2/tag_formats_cant_we_all_just_get_along.php">Tag formats: Can't we all just get along? - Signal vs. Noise (by 37signals)</a></p>

<p>2005 年的文章。估計是 37signals 要實作標籤系統時，研究了當時幾個主流網站的標籤機制，對象包括 del.icio.us, 43things, Yahoo’s My Web, flickr 與 Amazon。這篇文章底下也有頗多值得一看的討論。文章的最後提到：</p>

<blockquote><p>當新科技剛出現時，不一致是免不了的。然而這些不同的格式是否會持續下去，或是終將會有個標準一統天下呢？</p></blockquote>

<p>2005 到現在，都六、七年了，標籤功能其實仍舊處於混沌未明的時代。</p>
]]></content>
  </entry>
  
</feed>
