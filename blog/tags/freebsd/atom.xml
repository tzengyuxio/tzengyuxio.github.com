<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: freebsd | Tzeng Yuxio]]></title>
  <link href="http://tzengyuxio.me/blog/tags/freebsd/atom.xml" rel="self"/>
  <link href="http://tzengyuxio.me/"/>
  <updated>2012-05-05T07:53:54+08:00</updated>
  <id>http://tzengyuxio.me/</id>
  <author>
    <name><![CDATA[Tzeng Yuxio]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[［FreeBSD］MySQL 的啟動]]></title>
    <link href="http://tzengyuxio.me/blog/2006/01/21/mysql-launch-on-boot/"/>
    <updated>2006-01-21T10:05:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2006/01/21/mysql-launch-on-boot</id>
    <content type="html"><![CDATA[<p>重裝了 MySQL 後發現，當 server 整個 reboot 的時候，MySQL 並沒有被啟動。找了一下發現<a href="http://www.lab.mlc.edu.tw/modules/newbb/viewtopic.php?topic_id=238&amp;forum=5">原因</a>。現在得像 apache 或 sendmail 等服務一樣，在 <code>rc.conf</code> 中加入</p>

<pre><code>mysql_enable="YES"
</code></pre>

<p>另外，若要知道有哪些 server 必須透過 <code>rc.conf</code> 來啟動的，可以透過下列方式：</p>

<pre><code>cd /usr/local/etc/rc.d/
grep _enable *
</code></pre>

<p>或是在安裝完套件後，view 一下 <code>/usr/local/etc/rc.d/xxx.sh</code>，看看要在 <code>rc.conf</code> 中加入什麼選項才能於開機時自動啟動。</p>

<hr />

<p><span style="color:gray;">參考自：<a href="http://www.lab.mlc.edu.tw/modules/newbb/viewtopic.php?topic_id=238&amp;forum=5">The FreeBSD Network Laboratory Studio</a>.</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[［安裝］Ruby on Rails on FreeBSD]]></title>
    <link href="http://tzengyuxio.me/blog/2006/01/10/ruby-on-rails-on-freebsd/"/>
    <updated>2006-01-10T12:34:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2006/01/10/ruby-on-rails-on-freebsd</id>
    <content type="html"><![CDATA[<h3>Step 1: Install Ruby</h3>

<p>先前不曉得裝什麼軟體就一併裝好了，所以跳過。</p>

<h3>Step 2: Install RubyGems</h3>

<p>這是等一下用來安裝 Rails 的工具，在 FreeBSD 下用 ports 安裝，輕鬆方便。</p>

<pre><code>[freebsd] /usr/ports/devel/ruby-gems&gt; make install clean
</code></pre>

<h3>Step 3: Install Rails</h3>

<p>照<a href="http://www.rubyonrails.org/down">官方網站</a>上的描述，同樣一行指令搞定。</p>

<pre><code>[freebsd] ~&gt; gem install rails --include-dependencies
</code></pre>

<p>註：我連試了兩次指令都執行到一半失敗，可能是網路 timeout 關係，第三次就順利成功了。</p>

<h3>Step 4: 建立應用程式</h3>

<p>基本上這也是照著前一個網頁的指示作。</p>

<pre><code>[freebsd] ~&gt; rails /path/to/my/new/application
[freebsd] ~&gt; cd /path/to/my/new/application
[freebsd] ~&gt; ruby script/server
</code></pre>

<p>接下來開啟網址 <code>http://0.0.0.0:3000</code> 就能夠看到關於 RoR 的說明了。<br/>
說明頁面的最底下有 Getting Started，可以開始寫 RoR 的程式囉！</p>

<hr />

<p>參考網址：</p>

<ol>
<li><a href="http://www.rubyonrails.org/down">Download Ruby on Rails</a></li>
<li><a href="http://www.onlamp.com/pub/a/onlamp/2005/01/20/rails.html?page=1">Rolling with Ruby on Rails</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[［心得］硬碟切割]]></title>
    <link href="http://tzengyuxio.me/blog/2005/11/22/hard-dirve-partition/"/>
    <updated>2005-11-22T04:24:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2005/11/22/hard-dirve-partition</id>
    <content type="html"><![CDATA[<p>每次安裝新電腦或重灌時，總要為硬碟分割的大小傷一下腦筋。先前我的做法都依據 Clive Tong-I Lin 的 <a href="http://groups.google.com.tw/group/tw.bbs.comp.386bsd/msg/ccf7216150299ee4">8G 經驗法則</a>：</p>

<!-- more -->


<blockquote><p>我的 8G 經驗法則是, 前 8G 系統用, 其它給 /home。<br/>
至於那前 8G 就在 sysinstall 直接給它 auto 不去煩惱了。</p>

<p>一般 server 用途, 8G 經驗法則還沒破功過 :)</p>

<p>Windows server 我也是這樣規劃, 前 8G 畫成 C: 灌系統,<br/>
其它的空間全劃成 D: 有的沒的任何資料都放 D:</p>

<p>儘供參考。</p></blockquote>

<p>不過上述經驗法則主要是針對 server 用途而言。而且隨著軟體越來越龐大（尤其是安裝了 VS.NET 之後，我以前不裝這玩意兒的），以及經歷過幾次 <code>/var</code> 爆掉的慘痛教訓（FreeBSD auto 預設給的 <code>/var</code> 都不大），看來似乎得重新思索一下硬碟分割的策略。</p>

<ol>
<li><p>系統給 10G（目前用最多的大概用到 8.2G/Windows，5G/FreeBSD without X）</p></li>
<li><p>剩下的給 <code>D:</code> 或 <code>/home</code></p></li>
<li><p>FreeBSD 下系統的分配策略：</p>

<ol>
<li><p><code>/</code> : 256M</p></li>
<li><p><code>/tmp</code> : 不大於 RAM (或乾脆 =RAM 就好)</p></li>
<li><p><code>swap</code> : 不小於 RAM，RAM 越小給越多，但不超過兩倍 (或乾脆 =RAM 就好)</p></li>
<li><p><code>/var</code> 視剩餘空間與 X 的安裝與否，分配 1～2G</p></li>
<li><p>其餘通通給 <code>/usr</code> (至少須 6G 以上)</p></li>
</ol>
</li>
<li><p>將部份資料搬移出系統分割區</p>

<ol>
<li><p><code>C:\Documents and Settings\username\My Documents</code> 搬到 <code>D:\HOME\username</code></p></li>
<li><p><code>/usr/local/www</code> 搬到 <code>/home/www</code> 下</p></li>
<li><p>如果 <code>/usr</code> 空間吃緊，將 <code>/usr/ports/distfiles</code> 也搬到 <code>/home</code> 底下</p></li>
</ol>
</li>
<li><p>原則：所有「有意義」的變動性檔案、文件，或需要儲存備份的資料，都往 <code>D:</code> 或 <code>/home</code> 底下丟</p>

<ol>
<li><p>像「網頁 cache」就是屬於<strong>無意義的</strong>變動性檔案；反之，「遊戲存檔」是<strong>有意義的</strong></p></li>
<li><p>非常用的軟體的也丟到 <code>D:</code> 或個人資料夾下，如臨時安裝的程式，或是遊戲軟體</p></li>
<li><p>將所有系統分割區中需要備份的檔案（如設定檔）在 <code>D:</code> 或 <code>/home</code> 之下建立捷徑或 symbolic link</p></li>
<li><p>此為原則，有些情況不必完全照著原則來。如資料庫檔案通常還是放在 <code>/var/db</code></p></li>
</ol>
</li>
<li><p><strong>總之 10G 給系統，剩下的都拿來塞資料用</strong> XD</p></li>
</ol>


<p>其實重點只需記住最後一點，至於其他的細節，那些都是個人經驗的累積，參考看看即可，不必然全部照作。</p>
]]></content>
  </entry>
  
</feed>
