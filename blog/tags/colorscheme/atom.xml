<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: colorscheme | Tzeng Yuxio]]></title>
  <link href="http://tzengyuxio.me/blog/tags/colorscheme/atom.xml" rel="self"/>
  <link href="http://tzengyuxio.me/"/>
  <updated>2012-09-03T01:04:34+08:00</updated>
  <id>http://tzengyuxio.me/</id>
  <author>
    <name><![CDATA[Tzeng Yuxio]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Solarized for google-code-prettify]]></title>
    <link href="http://tzengyuxio.me/blog/2012/03/11/solarized-for-google-code-prettify/"/>
    <updated>2012-03-11T07:20:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2012/03/11/solarized-for-google-code-prettify</id>
    <content type="html"><![CDATA[<p><a href="/blog/2011/08/07/embeded-code-with-google-code-prettify/">我用 google-code-prettify 來做 blog 文章中的代碼上色</a>，google-code-prettify 本身有<a href="http://google-code-prettify.googlecode.com/svn/trunk/styles/index.html">附上幾個 Color Scheme</a>, 然而除了預設的之外，都是以暗色背景為主。</p>

<!-- more -->


<p>昨天心血來潮將 <a href="http://ethanschoonover.com/solarized">Solarized</a> 這個 Color Scheme 移植到 google-code-prettify 下，同樣也是 dark/light 雙版本。關於 Solarized 的介紹可以參考<a href="/blog/2012/02/10/from-zenburn-to-solarized/">這篇文章</a>。</p>

<h2>下載 / Download</h2>

<ul>
<li><p>Solarized Light</p>

<ul>
<li>Download <a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-light.css">Normal version</a></li>
<li>Download <a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-light.min.css">Minified version</a></li>
</ul>
</li>
<li><p>Solarized Dark</p>

<ul>
<li>Download <a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-dark.css">Normal version</a></li>
<li>Download <a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-dark.min.css">Minified version</a></li>
</ul>
</li>
</ul>


<h2>代碼 / Code</h2>

<h3>Solarized Light</h3>

<p>正常排版版本 (<a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-light.css">download</a>)：</p>

<p>``` css
.pln{color:#657b83}
@media screen{</p>

<pre><code>.str{color:#2aa198}
.kwd{color:#859900}
.com{color:#93a1a1}
.typ{color:#b58900}
.lit{color:#2aa198}
.pun,.opn,.clo{color:#657b83}
.tag{color:#268bd2}
.atn{color:#93a1a1}
.atv{color:#2aa198}
.dec,.var{color:#268bd2}
.fun{color:red}
</code></pre>

<p>}
@media print,projection{</p>

<pre><code>.str{color:#060}
.kwd{color:#006;font-weight:bold}
.com{color:#600;font-style:italic}
.typ{color:#404;font-weight:bold}
.lit{color:#044}
.pun{color:#440}
.tag{color:#006;font-weight:bold}
.atn{color:#404}
.atv{color:#060}
</code></pre>

<p>}
pre.prettyprint{padding:5px;border:1px solid #888;background:#fdf6e3}
ol.linenums{margin-top:0;margin-bottom:0}
li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}
li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}
```</p>

<p>最小化版本 (<a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-light.min.css">download</a>)：</p>

<p><code>css
.pln{color:#657b83}@media screen{.str{color:#2aa198}.kwd{color:#859900}.com{color:#93a1a1}.typ{color:#b58900}.lit{color:#2aa198}.pun,.opn,.clo{color:#657b83}.tag{color:#268bd2}.atn{color:#93a1a1}.atv{color:#2aa198}.dec,.var{color:#268bd2}.fun{color:red}}@media print,projection{.str{color:#060}.kwd{color:#006;font-weight:bold}.com{color:#600;font-style:italic}.typ{color:#404;font-weight:bold}.lit{color:#044}.pun{color:#440}.tag{color:#006;font-weight:bold}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:5px;border:1px solid #888;background:#fdf6e3}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}
</code></p>

<h3>Solarized Dark</h3>

<p>正常排版版本 (<a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-dark.css">download</a>)：</p>

<p>``` css
.pln{color:#839496}
@media screen{</p>

<pre><code>.str{color:#2aa198}
.kwd{color:#859900}
.com{color:#586175}
.typ{color:#b58900}
.lit{color:#2aa198}
.pun,.opn,.clo{color:#839496}
.tag{color:#268bd2}
.atn{color:#586175}
.atv{color:#2aa198}
.dec,.var{color:#268bd2}
.fun{color:red}
</code></pre>

<p>}
@media print,projection{</p>

<pre><code>.str{color:#060}
.kwd{color:#006;font-weight:bold}
.com{color:#600;font-style:italic}
.typ{color:#404;font-weight:bold}
.lit{color:#044}
.pun{color:#440}
.tag{color:#006;font-weight:bold}
.atn{color:#404}
.atv{color:#060}
</code></pre>

<p>}
pre.prettyprint{padding:5px;border:1px solid #888;background:#002b36}
ol.linenums{margin-top:0;margin-bottom:0}
li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}
li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}
```</p>

<p>最小化版本 (<a href="http://dl.dropbox.com/u/1324456/google-code-prettify/solarized-dark.min.css">download</a>)：</p>

<p><code>css
.pln{color:#839496}@media screen{.str{color:#2aa198}.kwd{color:#859900}.com{color:#586175}.typ{color:#b58900}.lit{color:#2aa198}.pun,.opn,.clo{color:#839496}.tag{color:#268bd2}.atn{color:#586175}.atv{color:#2aa198}.dec,.var{color:#268bd2}.fun{color:red}}@media print,projection{.str{color:#060}.kwd{color:#006;font-weight:bold}.com{color:#600;font-style:italic}.typ{color:#404;font-weight:bold}.lit{color:#044}.pun{color:#440}.tag{color:#006;font-weight:bold}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:5px;border:1px solid #888;background:#002b36}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#111}
</code></p>

<h2>範例 / Example (in dark version)</h2>

<pre class="prettyprint lang-java"><code>import java.util.Map;
import java.util.TreeSet;

public class GetEnv {
  /**
   * let's test generics
   * @param args the command line arguments
   */
  public static void main(String[] args) {
    // get a map of environment variables
    Map&lt;String, String&gt; env = System.getenv();
    // build a sorted set out of the keys and iterate
    for(String k: new TreeSet&lt;String&gt;(env.keySet())) {
      System.out.printf("%s = %s\n", k, env.get(k));
    }
  }    
}
</code></pre>


<hr />

<p>網路上有找到<a href="http://subtech.g.hatena.ne.jp/h2u/20110408/1302198319">這篇也有 solarized color for google-pretty-code</a>, 不過只有暗色背景的版本。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的 vimrc 配置]]></title>
    <link href="http://tzengyuxio.me/blog/2011/12/30/my-vimrc/"/>
    <updated>2011-12-30T05:10:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2011/12/30/my-vimrc</id>
    <content type="html"><![CDATA[<p>我的 vimrc 配置 @ GitHub: <a href="https://github.com/tzengyuxio/vimrc">github</a></p>

<p><span class='caption-wrapper'><img class='caption' src='http://4.bp.blogspot.com/-SoWAf_kGFPo/TvzTjBvAFQI/AAAAAAAAJG4/clbERtQVV9s/s800/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-12-30+%25E4%25B8%258A%25E5%258D%25884.49.11.png' width='' height='' alt='Vim in Terminal (Mac)' title='Vim in Terminal (Mac)'><span class='caption-text'>Vim in Terminal (Mac)</span></span></p>

<!-- more -->


<p>我一直在用的 vimrc 配置是在我還在以 WinXP 作為主要工作電腦時所配置的， 有超過一年多沒動過了。現在的主要工作電腦以 Mac OS X 為主，當初寫的配置如今有些不合用，然而這好些個日子以來也都是一直將就著用，懶得動手改。終於今天決定要趁著年底來個大掃除，整理一下 vimrc，順便也把程式碼從原本的自家用 SVN 轉移到 GitHub 上。</p>

<p>這次最大的修補就是狀態列了。原本狀態列的配色只有寫了 GUI 模式下的版本，因此在 Terminal 的純文字模式下，只會見到模糊不清的文字配色，要看清楚狀態列訊息得特別花眼力。今天重新調整了狀態列在 GUI 模式與純文字模式下的配色，另外也加上了隨著視窗寬度調整，能夠自動增減狀態列訊息的功能。</p>

<p><span class='caption-wrapper'><img class='caption' src='http://1.bp.blogspot.com/-tO5LBggCPPE/TvzTj2R8bmI/AAAAAAAAJHA/bb3vgwSzoNY/s800/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-12-30+%25E4%25B8%258A%25E5%258D%25884.50.02.png' width='' height='' alt='MacVim' title='MacVim'><span class='caption-text'>MacVim</span></span></p>

<p>另外一個比較大的改變不在於程式碼本身，而在於 vimrc 與相關外掛的管理方式。這次加入了 <a href="http://www.vim.org/scripts/script.php?script_id=2332">pathogen</a> 來做為外掛套件管理。另外，除了將專案移到了 GitHub 外，也特別研究了 "git submodule" 的使用方式，把 NERD tree 等外掛的 git 加入到自己的 git repository 中，而不是單純地把檔案加進來。關於 "git submodule" 的進一步介紹與說明，可以參考<a href="http://josephjiang.com/entry.php?id=342">〈Git Submodule 的認識與正確使用！〉</a>這篇文章，講解的非常清楚。</p>

<p>有時間的話再來寫幾篇文章來對自己 vimrc 中的設定作個詳細的說明。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的 Eclipse 初始設定調教]]></title>
    <link href="http://tzengyuxio.me/blog/2011/12/27/my-eclipse-settings/"/>
    <updated>2011-12-27T07:30:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2011/12/27/my-eclipse-settings</id>
    <content type="html"><![CDATA[<ul>
<li><span style="color:red;">12/30 更新：追加了行號、跳格字元等相關項目</span></li>
</ul>


<p>這篇文章是<a href="/blog/2011/12/26/eclipse-setup-note/">〈Eclipse 安裝筆記〉</a>系列之一，算是個人的安裝過程紀錄。以下是安裝時的環境參考：</p>

<ul>
<li>作業系統：Mac OS X 10.7.2</li>
<li>程式版本：Eclipse Indigo 3.7.1,IDE for Java Developers</li>
</ul>


<!-- more -->


<p>雖說初始設定調教，不過其實要改的地方也不多。現在對於工具的想法我是抱持著盡量不要改太多，以免花太多時間在調整工具上。</p>

<p>以前在不同的軟體間，可能還會改些快速鍵，希望跨不同的軟體時有一致的快速鍵操作，現在都直接讓自己適應。畢竟最常用的快速鍵：剪下、複製、貼上、存檔，所佔用的使用比率高達八成，而這些操作的快速鍵幾乎各軟體平台適用，這就夠了。剩下的<a href="/blog/2011/07/30/eclipse-common-keyboard-shortcuts/">查查 cheat sheet 吧</a>，反正真的常用的一定會讓身體記起來的。</p>

<p>所以要做的設定調整很簡單，就是<strong>配色</strong>、<strong>編碼</strong>、<strong>行號</strong>、<strong>字型</strong>和<strong>跳格字元</strong>。就這樣。</p>

<h2>配色</h2>

<p>關於配色我習慣用 <a href="http://slinky.imukuppi.org/zenburn/">Zenburn</a>，這組配色採用低對比色，看上去很舒服，以暗色為背景，看久了眼睛也比較不會累。基本上，只要支援 Color Syntax 的編輯器，幾乎都可以找到 zenburn 的配色腳本。</p>

<p>要使用 zenburn, 只要安裝 <a href="http://marketplace.eclipse.org/content/eclipse-color-theme">Eclipse Color Theme</a>，之後就可以在「偏好設定」中指定 zenburn 的配色了。</p>

<p><a href="http://4.bp.blogspot.com/-NiL2SO1-6fk/TvkACwIt5nI/AAAAAAAAJGY/L9UowM5D3IY/s1600/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-12-26+%25E4%25B8%258B%25E5%258D%25889.35.15.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="226" src="http://4.bp.blogspot.com/-NiL2SO1-6fk/TvkACwIt5nI/AAAAAAAAJGY/L9UowM5D3IY/s320/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-12-26+%25E4%25B8%258B%25E5%258D%25889.35.15.png" width="320" /></a></p>

<h2>編碼</h2>

<p>小地方可是卻很容易忘記的步驟。將 Text file encoding 指定為 UTF-8, 可以省下之後關於文字編碼上的許多麻煩，特別是程式碼中不小心塞了些中文在註解或字串中－－雖然這是不好的作法，但有時候你就是避不了。</p>

<p><a href="http://4.bp.blogspot.com/-MpDUemc3nJk/TvkApe5KSQI/AAAAAAAAJGk/N77filTQSo0/s1600/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-12-26+%25E4%25B8%258B%25E5%258D%25889.36.41.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="260" src="http://4.bp.blogspot.com/-MpDUemc3nJk/TvkApe5KSQI/AAAAAAAAJGk/N77filTQSo0/s320/%25E8%259E%25A2%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7+2011-12-26+%25E4%25B8%258B%25E5%258D%25889.36.41.png" width="320" /></a></p>

<h2>行號</h2>

<p>我寫程式喜歡有行號，有時候 Compiler 或 Log 告訴你哪一行出錯了，有行號的話便立刻能在畫面上定位。除了行號顯示的設定（Show line numbers）之外，在同個設定頁面中的顯示列印邊界（Show print margin）最好也一起勾上，有了這個提示，可以督促自己不要寫出一行太長的代碼。</p>

<p><a href="http://2.bp.blogspot.com/-DkSNa3h45Hg/TvzZmcDu9kI/AAAAAAAAJHM/JBq5gPfho7w/s1600/line_and_colmargin.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="290" src="http://2.bp.blogspot.com/-DkSNa3h45Hg/TvzZmcDu9kI/AAAAAAAAJHM/JBq5gPfho7w/s320/line_and_colmargin.png" width="320" /></a></p>

<h2>跳格字元（Tab）</h2>

<p>Tab 用來對齊程式代碼很好用，可是隨著每台電腦設定的不同，在自己電腦上看起來整整齊齊的 Code, 到了別人電腦上一看可能歪七扭八。所以我偏好用空白來取代 Tab 字元（Insert spaces for tabs），雖然有時候 backspace 時要多按個幾下，不過至少可以確定這邊看到的跟其他電腦上看到的是一致的。 設定「空白取代跳格字元」的地方跟設定「行號顯示」是同一個頁面，就在上面而已。</p>

<h2>字型</h2>

<p>這部份算是個補充。寫程式的字型我偏好使用 <a href="http://www.donationcoder.com/Software/Jibz/Dina/">Dina Programming Font</a>, 這是個有 8pt, 9pt, 10pt 三種大小的點陣字型。這個字型的「數字1, 小寫l, 大寫I」以及「字母O, 數字0」均有相當清楚的分別。它曾在 Visual Studio 跟 Vim 上陪伴了我好幾年的歲月。不過這一兩年以來，我也漸漸可以接受 Microsoft 的 Consolas 與 Apple 的 Monaco/Menlo 等向量字作為 Coding 字型，所以也逐漸放棄將預設字型改成自己偏好的 Dina 了。謹以此處一小段文章紀念一下 Dina Programming Font。</p>
]]></content>
  </entry>
  
</feed>
