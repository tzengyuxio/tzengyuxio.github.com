<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: crc32 | Tzeng Yuxio]]></title>
  <link href="http://tzengyuxio.me/blog/tags/crc32/atom.xml" rel="self"/>
  <link href="http://tzengyuxio.me/"/>
  <updated>2012-05-04T15:43:54+08:00</updated>
  <id>http://tzengyuxio.me/</id>
  <author>
    <name><![CDATA[Tzeng Yuxio]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python 計算檔案的 CRC32 驗證碼]]></title>
    <link href="http://tzengyuxio.me/blog/2012/01/24/python-crc32/"/>
    <updated>2012-01-24T17:02:00+08:00</updated>
    <id>http://tzengyuxio.me/blog/2012/01/24/python-crc32</id>
    <content type="html"><![CDATA[<p>用 Python 計算 CRC32 很簡單，只要使用內建的 binascii 模組即可。<br /><pre class="prettyprint lang-py">import binascii<br />print binascii.crc32("hello world")<br /></pre>要反覆計算的話，可以用：<br /><pre class="prettyprint lang-py">crc = binascii.crc32("hello")<br />crc = binascii.crc32(" world", crc)<br /></pre>其中的第二行，將前一步驟所計算的 CRC 結果作為參數再次傳入函式中。<br /><br /><br />如果要計算檔案的 CRC32，可以透過以下函式來計算：<br /><pre class="prettyprint lang-py">import binascii<br />def computeFileCRC(filename):<br />    try:<br />        blocksize = 1024 * 64<br />        f = open(filename, "rb")<br />        str = f.read(blocksize)<br />        crc = 0<br />        while len(str) != 0:<br />            crc = binascii.crc32(str,crc) &amp; 0xffffffff<br />            str = f.read(blocksize)<br />        f.close()<br />    except:<br />        print "compute file crc failed!"<br />        return 0<br />    return crc<br /></pre><br />上面比較特別要注意的是這行：<br /><pre class="prettyprint lang-py">crc = binascii.crc32(str,crc) &amp; 0xffffffff<br /></pre>根據官方文件，在 Python 2.x 的版本中，binascii.crc32 所計算出來的 CRC 值域為 [-2<sup>31,</sup> 2<sup>31-1]</sup> 之間的有號整數，為了要與一般 C 所實作的 CRC 結果作比對，需要將其轉為無號整數，所以加上「<span style="font-family: 'Courier New', Courier, monospace;">&amp; 0xffffffff</span>」這段來做轉換。如果是 Python 3.x 的版本，其計算結果為 [0, 2<sup>32-1]</sup> 間的無號整數，因此不需額外加上修正。<br /><br /><br />另外，上述 <span style="font-family: 'Courier New', Courier, monospace;">computeFileCRC</span> 計算的結果為十進位整數，而通常見到的 CRC32 字串會以 16 進位方式表示，所以可以這樣轉換：<br /><pre class="prettyprint lang-py">crcstr = hex(computeFileCRC("somefile"))[2:]<br /></pre>或是，如果要直接使用在字串中，也可以用 format 的方式轉換成 16 進位格式：<br /><pre class="prettyprint lang-py">print ("crc32: %08x" % computeFileCRC("somefile"))<br /></pre></p>
]]></content>
  </entry>
  
</feed>
